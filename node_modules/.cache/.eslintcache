[{"D:\\React_Practice\\blog_authentication_mui\\src\\index.js":"1","D:\\React_Practice\\blog_authentication_mui\\src\\App.js":"2","D:\\React_Practice\\blog_authentication_mui\\src\\reportWebVitals.js":"3","D:\\React_Practice\\blog_authentication_mui\\src\\context\\Auth.jsx":"4","D:\\React_Practice\\blog_authentication_mui\\src\\router\\Routing.jsx":"5","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\Blog.jsx":"6","D:\\React_Practice\\blog_authentication_mui\\src\\auth\\Login.jsx":"7","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\Courses.jsx":"8","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\Home.jsx":"9","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\Contact.jsx":"10","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\About.jsx":"11","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\CategoryDetails.jsx":"12","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\BlogDetails.jsx":"13","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\Profile.jsx":"14","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\ApplyCourse.jsx":"15","D:\\React_Practice\\blog_authentication_mui\\src\\auth\\Register.jsx":"16","D:\\React_Practice\\blog_authentication_mui\\src\\service\\Api.jsx":"17","D:\\React_Practice\\blog_authentication_mui\\src\\components\\Layout.jsx":"18","D:\\React_Practice\\blog_authentication_mui\\src\\service\\AxiosInstance.jsx":"19","D:\\React_Practice\\blog_authentication_mui\\src\\components\\Header.jsx":"20","D:\\React_Practice\\blog_authentication_mui\\src\\components\\Footer.jsx":"21","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\SearchPage.jsx":"22","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\Paginations\\Pagnition.jsx":"23"},{"size":669,"mtime":1699007617850,"results":"24","hashOfConfig":"25"},{"size":272,"mtime":1697230905964,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1697218562703,"results":"27","hashOfConfig":"25"},{"size":835,"mtime":1697219452981,"results":"28","hashOfConfig":"25"},{"size":2584,"mtime":1698982287518,"results":"29","hashOfConfig":"25"},{"size":16581,"mtime":1698775315293,"results":"30","hashOfConfig":"25"},{"size":4868,"mtime":1699091198693,"results":"31","hashOfConfig":"25"},{"size":4727,"mtime":1698829333013,"results":"32","hashOfConfig":"25"},{"size":6897,"mtime":1698695514832,"results":"33","hashOfConfig":"25"},{"size":5323,"mtime":1697884545442,"results":"34","hashOfConfig":"25"},{"size":2902,"mtime":1698695801197,"results":"35","hashOfConfig":"25"},{"size":8625,"mtime":1698576794917,"results":"36","hashOfConfig":"25"},{"size":17208,"mtime":1699090565804,"results":"37","hashOfConfig":"25"},{"size":1999,"mtime":1697311104331,"results":"38","hashOfConfig":"25"},{"size":4783,"mtime":1698980523946,"results":"39","hashOfConfig":"25"},{"size":4747,"mtime":1697819404485,"results":"40","hashOfConfig":"25"},{"size":4322,"mtime":1699032773642,"results":"41","hashOfConfig":"25"},{"size":789,"mtime":1697887279455,"results":"42","hashOfConfig":"25"},{"size":116,"mtime":1697539862880,"results":"43","hashOfConfig":"25"},{"size":11280,"mtime":1698737717745,"results":"44","hashOfConfig":"25"},{"size":6233,"mtime":1698827164769,"results":"45","hashOfConfig":"25"},{"size":8346,"mtime":1698571298808,"results":"46","hashOfConfig":"25"},{"size":526,"mtime":1698693841034,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dxhpca",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"54"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"54"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\React_Practice\\blog_authentication_mui\\src\\index.js",[],[],"D:\\React_Practice\\blog_authentication_mui\\src\\App.js",[],[],["130"],"D:\\React_Practice\\blog_authentication_mui\\src\\reportWebVitals.js",[],[],"D:\\React_Practice\\blog_authentication_mui\\src\\context\\Auth.jsx",["131"],[],"const { createContext, useState, useEffect, useContext } = require(\"react\");\r\n\r\n\r\nconst AuthContext = createContext()\r\n\r\nconst AUthProvider = ({children}) =>{\r\n    const [auth, setAuth] = useState({\r\n        user: null,\r\n        token: \"\"\r\n    })\r\n\r\n    useEffect(()=>{\r\n        const data = localStorage.getItem('auth')\r\n\r\n        if (data){\r\n            const parseData = JSON.parse(data)\r\n            setAuth({\r\n                ...auth,\r\n                user: parseData.user, \r\n                token: parseData.token\r\n            })\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n            <AuthContext.Provider value={[auth, setAuth]}>\r\n                {children}\r\n            </AuthContext.Provider>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n// Custom Hook\r\n\r\nconst useAuth = ()=> useContext(AuthContext)\r\n\r\nexport {useAuth, AUthProvider}","D:\\React_Practice\\blog_authentication_mui\\src\\router\\Routing.jsx",[],[],"D:\\React_Practice\\blog_authentication_mui\\src\\pages\\Blog.jsx",["132"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { AllCategoryData, allBlogData, recentPostData } from \"../service/Api\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport { useAuth } from \"../context/Auth\";\r\nimport swal from \"sweetalert\";\r\nimport moment from \"moment/moment\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport CalendarMonthIcon from \"@mui/icons-material/CalendarMonth\";\r\nimport CommentIcon from \"@mui/icons-material/Comment\";\r\nimport Pagnition from \"./Paginations/Pagnition\";\r\n\r\nconst Blog = () => {\r\n  const imgUrl = \"https://restapinodejs.onrender.com\";\r\n\r\n  const [blog, setBlog] = useState([]);\r\n  const [category, setCategory] = useState([]);\r\n  const [recentPost, setRecentPost] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [loading1, setLoading1] = useState(true);\r\n  const [loading2, setLoading2] = useState(true);\r\n  const [auth] = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const getAllBlogData = async () => {\r\n    const response = await allBlogData();\r\n    setBlog(response?.data?.data);\r\n    setLoading(false);\r\n    // console.log('data', response);\r\n  };\r\n\r\n  const getAllCategoryData = async () => {\r\n    const response_cat = await AllCategoryData();\r\n    setCategory(response_cat?.data?.data);\r\n    setLoading1(false);\r\n    // console.log(\"catData\", category);\r\n  };\r\n\r\n  const getRecentPostData = async () => {\r\n    const response_recentPost = await recentPostData();\r\n    setRecentPost(response_recentPost?.data?.data);\r\n    setLoading2(false);\r\n    // console.log(\"recent\", response_recentPost);\r\n  };\r\n\r\n  // console.log(\"RPost\", recentPost);\r\n\r\n  useEffect(() => {\r\n    getAllBlogData();\r\n    getAllCategoryData();\r\n    getRecentPostData();\r\n  }, []);\r\n\r\n  // Load More Data Option\r\n  const dataPerRow = 3;\r\n  const [loadMoreData, setLoadMoreData] = useState(dataPerRow);\r\n  const handleMoreData = () => {\r\n    setLoadMoreData(loadMoreData + dataPerRow);\r\n  };\r\n\r\n  // Pagination \r\n\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const recordsPerPage = 2\r\n  const lastIndex = currentPage * recordsPerPage\r\n  const firstIndex = lastIndex - recordsPerPage\r\n  const records = blog.slice(firstIndex, lastIndex)\r\n  const page = Math.ceil(blog.length / recordsPerPage)\r\n\r\n  const handlePageChange = (event, newPage) =>{\r\n    setCurrentPage(newPage)\r\n    \r\n  }\r\n\r\n\r\n  // Search\r\n  const [searchItem, setSearchItem] = useState(\"\");\r\n\r\n  const handleSearch = () => {\r\n    const encodedItem = encodeURIComponent(searchItem);\r\n    navigate(`/searchpage/${encodedItem}`);\r\n    setSearchItem(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout title={\"PhoenixTech-Blog\"}>\r\n        <Container sx={{ mt: 4 }}>\r\n          <Grid\r\n            container\r\n            spacing={0}\r\n            direction={{ xs: \"column\", md: \"row\" }}\r\n            justifyContent={{ xs: \"center\", md: \"flex-end\" }}\r\n          >\r\n            <Grid item xs={9} pr={3}>\r\n              {loading ? (\r\n                <>\r\n                  <Card\r\n                    sx={{\r\n                      width: \"auto\",\r\n                      boxShadow: \"0px 0px 30px rgba(0,0,0,0.5)\",\r\n                      mb: 4\r\n                    }}\r\n                  >\r\n                    <CardHeader\r\n                      title={\r\n                        <Skeleton variant=\"text\" sx={{ fontSize: \"3rem\" }} />\r\n                      }\r\n                      subheader={\r\n                        <Skeleton variant=\"text\" sx={{ fontSize: \"1rem\" }} />\r\n                      }\r\n                    />\r\n                    <Skeleton\r\n                      variant=\"rectangular\"\r\n                      width={\"100%\"}\r\n                      height={400}\r\n                    />\r\n                    <CardContent>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {<Skeleton variant=\"text\" sx={{ fontSize: \"1rem\" }} />}\r\n                      </Typography>\r\n                      <Skeleton variant=\"text\" sx={{ fontSize: \"1rem\" }} />\r\n                    </CardContent>\r\n                  </Card>\r\n                  <Card\r\n                    sx={{\r\n                      width: \"auto\",\r\n                      boxShadow: \"0px 0px 30px rgba(0,0,0,0.5)\",\r\n                    }}\r\n                  >\r\n                    <CardHeader\r\n                      title={\r\n                        <Skeleton variant=\"text\" sx={{ fontSize: \"3rem\" }} />\r\n                      }\r\n                      subheader={\r\n                        <Skeleton variant=\"text\" sx={{ fontSize: \"1rem\" }} />\r\n                      }\r\n                    />\r\n                    <Skeleton\r\n                      variant=\"rectangular\"\r\n                      width={\"100%\"}\r\n                      height={400}\r\n                    />\r\n                    <CardContent>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {<Skeleton variant=\"text\" sx={{ fontSize: \"1rem\" }} />}\r\n                      </Typography>\r\n                      <Skeleton variant=\"text\" sx={{ fontSize: \"1rem\" }} />\r\n                    </CardContent>\r\n                  </Card>\r\n                </>\r\n              ) : (\r\n                records.map((blogs, key) => {\r\n                  return (\r\n                    <>\r\n                      <Card\r\n                        key={key}\r\n                        sx={{\r\n                          width: \"auto\",\r\n                          boxShadow: \"0px 0px 30px rgba(0,0,0,0.5)\",\r\n                          mb: 4,\r\n                        }}\r\n                      >\r\n                        <CardHeader\r\n                          title={blogs.title}\r\n                          subheader={\r\n                            <>\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                sx={{\r\n                                  \"&:hover\": { backgroundColor: \"orange\" },\r\n                                  backgroundColor: \"orange\",\r\n                                  mt: 1,\r\n                                  mb: 1,\r\n                                }}\r\n                              >\r\n                                <PersonIcon\r\n                                  style={{\r\n                                    fontSize: \"medium\",\r\n                                    paddingRight: \"5px\",\r\n                                  }}\r\n                                />{\" \"}\r\n                                John Doe\r\n                              </Button>\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                sx={{\r\n                                  \"&:hover\": { backgroundColor: \"#ffd800\" },\r\n                                  backgroundColor: \"#ffd800\",\r\n                                  mt: 1,\r\n                                  mb: 1,\r\n                                  ml: 1,\r\n                                }}\r\n                              >\r\n                                <time>\r\n                                  <CalendarMonthIcon\r\n                                    style={{\r\n                                      fontSize: \"medium\",\r\n                                      paddingRight: \"2px\",\r\n                                    }}\r\n                                  />\r\n                                  {moment(blogs.createdAt).format(\r\n                                    \" Do MM, YYYY\"\r\n                                  )}\r\n                                </time>\r\n                              </Button>\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                sx={{\r\n                                  \"&:hover\": { backgroundColor: \"#D54B01\" },\r\n                                  backgroundColor: \"#D54B01\",\r\n                                  mt: 1,\r\n                                  mb: 1,\r\n                                  ml: 1,\r\n                                }}\r\n                              >\r\n                                <CommentIcon\r\n                                  style={{\r\n                                    fontSize: \"medium\",\r\n                                    paddingTop: \"2px\",\r\n                                    paddingRight: \"5px\",\r\n                                  }}\r\n                                />\r\n                                {blogs.comment_count}\r\n                              </Button>\r\n                            </>\r\n                          }\r\n                        />\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          height=\"400\"\r\n                          image={`${imgUrl}/api/blog/image/${blogs._id}`}\r\n                          alt=\"No Image Found\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color=\"text.secondary\"\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: blogs?.postText.slice(0, 300),\r\n                            }}\r\n                          >\r\n                            {/* {blogs.postText.slice(0, 300)} */}\r\n                          </Typography>\r\n                          {!auth.user ? (\r\n                            <Link\r\n                              onClick={() =>\r\n                                swal({\r\n                                  title: \"Are you logged in?\",\r\n                                  text: \"Please login first to access further.\",\r\n                                  icon: \"error\",\r\n                                  dangerMode: true,\r\n                                })\r\n                              }\r\n                              style={{ textDecoration: \"none\", color: \"blue\" }}\r\n                            >\r\n                              <Button variant=\"contained\" color=\"warning\">\r\n                                Read More\r\n                              </Button>\r\n                            </Link>\r\n                          ) : (\r\n                            <Link\r\n                              to={`/blogdetails/${blogs._id}`}\r\n                              style={{ textDecoration: \"none\", color: \"blue\" }}\r\n                            >\r\n                              <Button variant=\"contained\" color=\"warning\">\r\n                                Read More\r\n                              </Button>\r\n                            </Link>\r\n                          )}\r\n                        </CardContent>\r\n                      </Card>\r\n                    </>\r\n                  );\r\n                })\r\n              )}\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={3}\r\n              sx={{ boxShadow: \"0px 0px 30px rgba(0,0,0,0.5)\", mb: 4, p: 2 }}\r\n            >\r\n              <h3>Search</h3>\r\n              <TextField\r\n                name=\"search\"\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                value={searchItem}\r\n                onChange={(e) => setSearchItem(e.target.value)}\r\n                margin=\"0\"\r\n                onKeyPress={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    handleSearch();\r\n                  }\r\n                }}\r\n              />\r\n              <h3>Categories</h3>\r\n              {loading1 ? (\r\n                <>\r\n                  <Skeleton\r\n                    variant=\"text\"\r\n                    sx={{ fontSize: \"1rem\", marginRight: \"25px\" }}\r\n                  />\r\n                  <Skeleton\r\n                    variant=\"text\"\r\n                    sx={{ fontSize: \"1rem\", marginRight: \"25px\" }}\r\n                  />\r\n                  <Skeleton\r\n                    variant=\"text\"\r\n                    sx={{ fontSize: \"1rem\", marginRight: \"25px\" }}\r\n                  />\r\n                  <Skeleton\r\n                    variant=\"text\"\r\n                    sx={{ fontSize: \"1rem\", marginRight: \"25px\" }}\r\n                  />\r\n                  <Skeleton\r\n                    variant=\"text\"\r\n                    sx={{ fontSize: \"1rem\", marginRight: \"25px\" }}\r\n                  />\r\n                </>\r\n              ) : (\r\n                category?.map((category, key) => {\r\n                  return (\r\n                    <>\r\n                      <Grid item xs={12} key={key} sx={{ padding: 1 }}>\r\n                        <Link\r\n                          to={`/categorydetails/${category._id}`}\r\n                          style={{ textDecoration: \"none\", color: \"black\" }}\r\n                        >\r\n                          {category.category}{\" \"}\r\n                          <span style={{ color: \"grey\", marginLeft: \"10px\" }}>\r\n                            {category.category.length}\r\n                          </span>\r\n                        </Link>\r\n                      </Grid>\r\n                    </>\r\n                  );\r\n                })\r\n              )}\r\n              <h3>Recent Posts</h3>\r\n              {loading2 ? (\r\n                <>\r\n                  <Skeleton\r\n                    variant=\"text\"\r\n                    sx={{ fontSize: \"1rem\", marginRight: \"25px\" }}\r\n                  />\r\n                  <Skeleton\r\n                    variant=\"text\"\r\n                    sx={{ fontSize: \"1rem\", marginRight: \"25px\" }}\r\n                  />\r\n                  <Skeleton\r\n                    variant=\"text\"\r\n                    sx={{ fontSize: \"1rem\", marginRight: \"25px\" }}\r\n                  />\r\n                  <Skeleton\r\n                    variant=\"text\"\r\n                    sx={{ fontSize: \"1rem\", marginRight: \"25px\" }}\r\n                  />\r\n                  <Skeleton\r\n                    variant=\"text\"\r\n                    sx={{ fontSize: \"1rem\", marginRight: \"25px\" }}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <Grid\r\n                  container\r\n                  rowSpacing={1}\r\n                  columnSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n                >\r\n                  {recentPost?.map((post, key) => {\r\n                    return (\r\n                      <>\r\n                        <Grid item xs={4} sx={{ padding: 1 }}>\r\n                          <img\r\n                            src={`${imgUrl}/api/blog/image/${post._id}`}\r\n                            alt=\"\"\r\n                            height={\"100%\"}\r\n                            width={\"100%\"}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={8} sx={{ padding: 1 }}>\r\n                          <Link\r\n                            to={`/blogdetails/${post._id}`}\r\n                            style={{\r\n                              textDecoration: \"none\",\r\n                              color: \"black\",\r\n                              fontWeight: 500,\r\n                            }}\r\n                            className=\"recentPostLink\"\r\n                          >\r\n                            {post.title}\r\n                          </Link>\r\n                          <Typography sx={{ color: \"grey\", fontSize: \"small\" }}>\r\n                            <time>\r\n                              {moment(post.createdAt).format(\r\n                                \" Do MM, YYYY, h:mm a\"\r\n                              )}\r\n                            </time>\r\n                          </Typography>\r\n                        </Grid>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Load More Start */}\r\n\r\n          {/* {loadMoreData < blog?.length && (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"error\"\r\n                sx={{ mb: 2 }}\r\n                onClick={handleMoreData}\r\n              >\r\n                Load More\r\n              </Button>\r\n            </>\r\n          )} */}\r\n          {/* Load More End */}\r\n\r\n          {/* Pagination Start */}\r\n            <Pagnition count={page} onChange={handlePageChange}/>\r\n          {/* Pagination End */}\r\n        </Container>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","D:\\React_Practice\\blog_authentication_mui\\src\\auth\\Login.jsx",[],[],"D:\\React_Practice\\blog_authentication_mui\\src\\pages\\Courses.jsx",["133","134"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport { getCourses } from \"../service/Api\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useAuth } from \"../context/Auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\nimport { CardActions } from \"@mui/material\";\r\n\r\nconst Courses = () => {\r\n  const [course, setCourse] = useState([]);\r\n  const [auth] = useAuth();\r\n  const navigate = useNavigate();\r\n  const imgUrl = \"https://restapinodejs.onrender.com\";\r\n\r\n  const CourseData = async () => {\r\n    const response = await getCourses();\r\n    setCourse(response?.data?.Courses);\r\n    console.log(\"course\", course);\r\n  };\r\n\r\n  useEffect(() => {\r\n    CourseData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Layout title={\"PhoenixTech-Courses\"}>\r\n        <Container>\r\n          <Grid\r\n            container\r\n            spacing={0}\r\n            direction={{ xs: \"column\", md: \"row\" }}\r\n            justifyContent={{ xs: \"center\", md: \"flex-baseline\" }}\r\n            alignItems={{ xs: \"center\", md: \"flex-end\" }}\r\n            sx={{ mt: 3 }}\r\n          >\r\n            {course?.map((element, index) => {\r\n              return (\r\n                <>\r\n                  <Grid item xs={4} key={index}>\r\n                    <Card\r\n                      sx={{\r\n                        maxWidth: \"auto\",\r\n                        height: 500,\r\n                        m: 2,\r\n                        borderRadius: 4,\r\n                        textAlign: \"center\"\r\n                      }}\r\n                    >\r\n                      <CardHeader\r\n                        sx={{\r\n                          backgroundColor: \"red\",\r\n                          height: 15,\r\n                          textAlign: \"center\",\r\n                          color: \"white\",\r\n                        }}\r\n                        title={element.name}\r\n                      />\r\n                      <CardMedia\r\n                        component=\"img\"\r\n                        sx={{height: 180, width: 250, m: 4}}\r\n                        image={`${imgUrl}/api/course/photo/${element._id}`}\r\n                        alt=\"Paella dish\"\r\n                        loading=\"lazy\"\r\n                      />\r\n                      <CardContent>\r\n                        <Typography\r\n                          variant=\"h4\"\r\n                          color=\"text.secondary\"\r\n                          sx={{ textAlign: \"center\", color: \"red\" }}\r\n                        >\r\n                          ₹ {element.fees} /-\r\n                        </Typography>\r\n                        <Typography\r\n                          color=\"text.secondary\"\r\n                          sx={{ textAlign: \"center\" }}\r\n                        >\r\n                          * Requirement: {element.requirement}\r\n                        </Typography>\r\n                        <Typography\r\n                          color=\"text.secondary\"\r\n                          sx={{ textAlign: \"center\" }}\r\n                        >\r\n                          * Duration: {element.duration}\r\n                        </Typography>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            sx={{ mt: 3}}\r\n                            onClick={\r\n                              !auth.user\r\n                                ? () =>\r\n                                    swal({\r\n                                      title: \"Are you logged in?\",\r\n                                      text: \"Please login first to access further.\",\r\n                                      icon: \"error\",\r\n                                      dangerMode: true,\r\n                                    })\r\n                                : () =>\r\n                                    navigate(\r\n                                      `/applycourse/${element.name}/${element._id}`\r\n                                    )\r\n                            }\r\n                          >\r\n                            Apply Now\r\n                          </Button>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                </>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Container>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Courses;\r\n","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\Home.jsx",["135","136"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport { BannerData, serviceData, testimonialData } from \"../service/Api\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Typography, Button } from \"@mui/material\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\n\r\nconst Home = () => {\r\n  const [banners, setBanners] = useState([]);\r\n  const [service, setService] = useState([]);\r\n  const [testimonial, setTestimonial] = useState([]);\r\n  const imgURL = \"https://restapinodejs.onrender.com\";\r\n\r\n  // Banner\r\n  const getBanenrData = async () => {\r\n    const response = await BannerData();\r\n    setBanners(response?.data?.bannerdata);\r\n    // console.log(\"banner\", banners);\r\n  };\r\n\r\n  // Service\r\n  const getServiceData = async () => {\r\n    const res_service = await serviceData();\r\n    setService(res_service?.data?.data);\r\n    // console.log(\"service\", service);\r\n  };\r\n\r\n  // Testimonials\r\n  const getTestimonial = async () => {\r\n    const res_Testimonial = await testimonialData();\r\n    setTestimonial(res_Testimonial?.data?.testimonials);\r\n    console.log(\"testi\", testimonial);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getBanenrData();\r\n    getServiceData();\r\n    getTestimonial();\r\n  }, []);\r\n\r\n  const bannerStyle = {\r\n    position: \"absolute\",\r\n    top: \"10px\",\r\n    left: \"10px\",\r\n    background: \"rgba(0, 0, 0, 0.5)\",\r\n    color: \"white\",\r\n    padding: \"10px\",\r\n    fontSize: \"18px\",\r\n    borderTop: \"5px solid red\",\r\n    width: \"50%\",\r\n    mt: \"20vh\",\r\n    ml: \"25vw\",\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Layout title={\"PhoenixTech-Home\"}>\r\n        {/* Carousel */}\r\n        <Carousel\r\n          showThumbs={false}\r\n          showArrows={true}\r\n          autoPlay={true}\r\n          showStatus={false}\r\n          swipeable={true}\r\n          infiniteLoop={true}\r\n        >\r\n          {banners?.map((banner, index) => (\r\n            <div key={index}>\r\n              <img\r\n                key={index}\r\n                src={`${imgURL}/api/banner/photo/${banner?._id}`}\r\n                alt=\"No Photo\"\r\n                height={500}\r\n              />\r\n              <Box sx={bannerStyle}>\r\n                <Typography p={2} fontWeight={\"bold\"} fontSize={\"2em\"}>\r\n                  {banner?.title}\r\n                </Typography>\r\n                <Typography fontSize={\"1rem\"}>{banner?.description}</Typography>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  sx={{ border: \"2px solid red\", color: \"white\", m: 2 }}\r\n                >\r\n                  Read More\r\n                </Button>\r\n              </Box>\r\n            </div>\r\n          ))}\r\n        </Carousel>\r\n\r\n        {/* Service */}\r\n        <Container sx={{ bgcolor: \"#F5F5F5\", height: \"auto\" }}>\r\n          <Typography\r\n            variant=\"h4\"\r\n            sx={{ textAlign: \"center\", pt: 4, fontWeight: \"bold\" }}\r\n          >\r\n            SERVICES\r\n          </Typography>\r\n          <Grid\r\n            container\r\n            rowSpacing={1}\r\n            columnSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n            direction={{ xs: \"column\", md: \"row\" }}\r\n            justifyContent={{ xs: \"center\", md: \"flex-end\" }}\r\n            alignItems={{ xs: \"center\", md: \"flex-end\" }}\r\n            sx={{ pt: 4, pb: 4 }}\r\n          >\r\n            {service?.map((item, key) => {\r\n              return (\r\n                <>\r\n                  <Grid item xs={4}>\r\n                    <Card sx={{ maxWidth: \"345\", height: \"60vh\", mb: 2 }}>\r\n                      <CardMedia\r\n                        sx={{ height: 200 }}\r\n                        image=\"/assets/Service_img.png\"\r\n                        title=\"green iguana\"\r\n                      />\r\n                      <CardContent>\r\n                        <Typography\r\n                          gutterBottom\r\n                          variant=\"h6\"\r\n                          component=\"div\"\r\n                          textAlign={\"center\"}\r\n                          fontWeight={\"bold\"}\r\n                        >\r\n                          {item.name}\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          color=\"text.secondary\"\r\n                          textAlign={\"center\"}\r\n                        >\r\n                          {item.details}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                </>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Container>\r\n\r\n        {/* TESTIMONIALS */}\r\n        <Container sx={{ height: \"auto\" }}>\r\n          <Typography\r\n            variant=\"h5\"\r\n            sx={{ fontWeight: \"bold\", textAlign: \"center\", m: 3 }}\r\n          >\r\n            TESTIMONIALS\r\n          </Typography>\r\n          <Grid\r\n            container\r\n            rowSpacing={1}\r\n            columnSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n            direction={{ xs: \"column\", md: \"row\" }}\r\n            justifyContent={{ xs: \"center\", md: \"flex-baseline\" }}\r\n            alignItems={{ xs: \"center\", md: \"flex-end\" }}\r\n          >\r\n            {testimonial?.map((element, index) => {\r\n              return (\r\n                <>\r\n                  <Grid item xs={6} height={\"auto\"} width={\"auto\"}>\r\n                    <Card\r\n                      sx={{\r\n                        Width: 345,\r\n                        height: 250,\r\n                        m: 2,\r\n                        boxShadow: \"0px 0px 30px rgba(0,0,0,0.3)\",\r\n                      }}\r\n                    >\r\n                      <CardHeader\r\n                        avatar={\r\n                          <Avatar\r\n                            alt=\"Remy Sharp\"\r\n                            src={`${imgURL}/api/testimonials/photo/${element._id}`}\r\n                            sx={{ height: 80, width: 80 }}\r\n                          />\r\n                        }\r\n                        title={element?.name}\r\n                        subheader={element?.position}\r\n                      />\r\n                      <CardContent>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                          {element?.talk}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                </>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Container>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\Contact.jsx",["137"],[],"import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\r\nimport EmailIcon from \"@mui/icons-material/Email\";\r\nimport CallIcon from \"@mui/icons-material/Call\";\r\nimport { Button } from \"@mui/material\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { contactData } from \"../service/Api\";\r\nimport swal from 'sweetalert';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Contact = () => {\r\n  const { register, handleSubmit } = useForm();\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const response = await contactData(data)\r\n      swal({\r\n        title: (response?.data?.message),\r\n        text: \" \",\r\n        icon: \"success\",\r\n        dangerMode: true,\r\n      })\r\n    } catch (error) {\r\n      swal({\r\n        title: \"Something Went Wrong\",\r\n        text: \" \",\r\n        icon: \"error\",\r\n        dangerMode: true,\r\n      })\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Layout title={\"PhoenixTech-Contact\"}>\r\n        {/* Map */}\r\n        <Container maxWidth=\"xl\">\r\n          <iframe\r\n            src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3684.1039987526487!2d88.42485957475722!3d22.575213332875617!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3a0275927b0061ad%3A0x496c2fab98874c86!2sWebskitters%20Technology%20Solutions%20Pvt.%20Ltd.!5e0!3m2!1sen!2sin!4v1697779293665!5m2!1sen!2sin\"\r\n            width=\"100%\"\r\n            height=\"450\"\r\n            style={{ border: 0 }}\r\n            allowfullscreen=\"\"\r\n            loading=\"lazy\"\r\n            referrerpolicy=\"no-referrer-when-downgrade\"\r\n          ></iframe>\r\n        </Container>\r\n\r\n        {/* Address */}\r\n        <Container>\r\n          <Grid\r\n            container\r\n            rowSpacing={1}\r\n            columnSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n            direction={{ xs: \"column\", md: \"row\" }}\r\n            justifyContent={{ xs: \"center\", md: \"flex-end\" }}\r\n            alignItems={{ xs: \"center\", }}\r\n            m={5}\r\n            sx={{ boxShadow: \"0px 0px 30px rgba(0,0,0,0.5)\" }}\r\n          >\r\n            <Grid item xs={4} p={4}>\r\n              <Typography variant=\"h6\" fontWeight=\"bold\">\r\n                <LocationOnIcon fontSize=\"large\" /> Location\r\n              </Typography>\r\n              <Typography>\r\n                Eco Intelligent Park, Unit No- 7E, 7th Floor, Block- EM, Plot-9,\r\n                Salt Lake Sector-5, Kolkata 700091, India\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={4} p={4}>\r\n              <Typography variant=\"h5\" fontWeight=\"bold\">\r\n                <EmailIcon fontSize=\"Large\" />\r\n                Email\r\n              </Typography>\r\n              <Typography>info@example.com</Typography>\r\n              <Typography>contact@example.com</Typography>\r\n            </Grid>\r\n            <Grid item xs={4} p={4}>\r\n              <Typography variant=\"h5\" fontWeight=\"bold\">\r\n                <CallIcon fontSize=\"large\" /> Call\r\n              </Typography>\r\n              <Typography>+1 5589 55488 51</Typography>\r\n              <Typography>+1 5589 22475 14</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n\r\n        {/* Contact Form */}\r\n        <Container\r\n          sx={{ boxShadow: \"0px 0px 30px rgba(0,0,0,0.5)\", height: \"auto\", mb: 5 }}\r\n        >\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div>\r\n              <TextField\r\n                label=\"Name\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                color=\"error\"\r\n                focused\r\n                sx={{ marginLeft: 2, marginTop: 5, width: \"45%\" }}\r\n                {...register(\"name\", { required: true })}\r\n              />\r\n              <TextField\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Don't worry!! Your mail id will remain private.\"\r\n                color=\"error\"\r\n                focused\r\n                sx={{ marginLeft: 2, marginTop: 5, width: \"45%\" }}\r\n                {...register(\"email\", { required: true })}\r\n              />\r\n            </div>\r\n            <TextField\r\n                label=\"Phone Number\"\r\n                type=\"number\"\r\n                name=\"phone\"\r\n                color=\"error\"\r\n                focused\r\n                sx={{ marginLeft: 2, marginTop: 5, width: \"93%\" }}\r\n                {...register(\"phone\", { required: true })}\r\n              />\r\n            <TextField\r\n              id=\"outlined-multiline-flexible\"\r\n              type=\"text\"\r\n              multiline\r\n              maxRows={5}\r\n              label=\"Place Your Comments Here\"\r\n              name=\"comment\"\r\n              color=\"error\"\r\n              focused\r\n              sx={{ marginLeft: 2, marginTop: 5, width: \"93%\" }}\r\n              {...register(\"message\", { required: true })}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"error\"\r\n              sx={{ margin: 2 }}\r\n            >\r\n              Message\r\n            </Button>\r\n          </form>\r\n        </Container>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\About.jsx",[],[],"D:\\React_Practice\\blog_authentication_mui\\src\\pages\\CategoryDetails.jsx",["138","139"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport { categoryDetailsData } from \"../service/Api\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Typography,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport Layout from \"../components/Layout\";\r\nimport { useAuth } from \"../context/Auth\";\r\nimport swal from \"sweetalert\";\r\nimport moment from \"moment/moment\";\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\r\nimport CommentIcon from '@mui/icons-material/Comment';\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\n\r\n\r\nconst CategoryDetails = () => {\r\n  const imgUrl = \"https://restapinodejs.onrender.com\";\r\n  const [category, setCategory] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [auth] = useAuth();\r\n\r\n  const { id } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const getCategoryDetails = async () => {\r\n    const response = await categoryDetailsData(id);\r\n    setCategory(response?.data?.data);\r\n    setLoading(false);\r\n    console.log(\"cat\", response);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCategoryDetails();\r\n  }, []);\r\n\r\n  const sweetPopup = ()=>{\r\n    swal({\r\n      title: \"No Data Found\",\r\n      text: \" \",\r\n      icon: \"warning\",\r\n      dangerMode: true,\r\n      buttons: false,\r\n      onclick: navigate('/blog'),\r\n      timer:3000\r\n    })\r\n  }\r\n\r\n  // Load More Data Option\r\n  const dataPerRow = 2;\r\n  const [loadMoreData, setLoadMoreData] = useState(dataPerRow);\r\n  const handleMoreData = () => {\r\n    setLoadMoreData(loadMoreData + dataPerRow);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout title={\"Category-Details\"}>\r\n        <Container sx={{mt: 5}}>\r\n          {loading ? (\r\n            <>\r\n              <Card\r\n                sx={{\r\n                  boxShadow: \"0px 0px 30px rgba(0,0,0,0.5)\",\r\n                }}\r\n              >\r\n                <CardHeader\r\n                  title={<Skeleton variant=\"text\" sx={{ fontSize: \"3rem\" }} />}\r\n                  subheader={\r\n                    <Skeleton variant=\"text\" sx={{ fontSize: \"1rem\" }} />\r\n                  }\r\n                />\r\n                <Skeleton variant=\"rectangular\" height={400} />\r\n                <CardContent>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {<Skeleton variant=\"text\" sx={{ fontSize: \"1rem\" }} />}\r\n                  </Typography>\r\n                  <Skeleton variant=\"text\" sx={{ fontSize: \"1rem\" }} />\r\n                </CardContent>\r\n              </Card>\r\n            </>\r\n          ) : !category.length > 0 ? (\r\n            sweetPopup()\r\n          ) : (\r\n            <>\r\n              {category?.length > 0 &&\r\n                category?.slice(0, loadMoreData).map((category, key) => {\r\n                  return (\r\n                    <>\r\n                      <Card\r\n                        key={key}\r\n                        sx={{\r\n                          boxShadow: \"0px 0px 30px rgba(0,0,0,0.5)\",\r\n                          mb: 4,\r\n                        }}\r\n                      >\r\n                        <CardHeader\r\n                          title={category.title}\r\n                          subheader={\r\n                            <>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                sx={{\r\n                                  \"&:hover\": { backgroundColor: \"orange\" },\r\n                                  backgroundColor: \"orange\",\r\n                                  mt: 1,\r\n                                  mb: 1,\r\n                                }}\r\n                              >\r\n                                <PersonIcon\r\n                                  style={{\r\n                                    fontSize: \"medium\",\r\n                                    paddingRight: \"5px\",\r\n                                  }}\r\n                                />{\" \"}\r\n                                John Doe\r\n                              </Button>\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                sx={{\r\n                                  \"&:hover\": { backgroundColor: \"#ffd800\" },\r\n                                  backgroundColor: \"#ffd800\",\r\n                                  mt: 1,\r\n                                  mb: 1,\r\n                                  ml: 1,\r\n                                }}\r\n                              >\r\n                                <time>\r\n                                  <CalendarMonthIcon\r\n                                    style={{\r\n                                      fontSize: \"medium\",\r\n                                      paddingRight: \"2px\",\r\n                                    }}\r\n                                  />\r\n                                  {moment(category.createdAt).format(\r\n                                    \" Do MM, YYYY\"\r\n                                  )}\r\n                                </time>\r\n                              </Button>\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                sx={{\r\n                                  \"&:hover\": { backgroundColor: \"#D54B01\" },\r\n                                  backgroundColor: \"#D54B01\",\r\n                                  mt: 1,\r\n                                  mb: 1,\r\n                                  ml: 1,\r\n                                }}\r\n                              >\r\n                                <CommentIcon\r\n                                  style={{\r\n                                    fontSize: \"medium\",\r\n                                    paddingTop: \"2px\",\r\n                                    paddingRight: \"5px\",\r\n                                  }}\r\n                                />\r\n                                {category.comments.length}\r\n                              </Button>\r\n                            </>\r\n                          }\r\n                        />\r\n                        <CardMedia\r\n                          component=\"img\"\r\n                          height=\"400\"\r\n                          image={`${imgUrl}/api/blog/image/${category._id}`}\r\n                          alt=\"No Image Found\"\r\n                        />\r\n                        <CardContent>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\" dangerouslySetInnerHTML={{\r\n                              __html: category?.postText.slice(0, 300),\r\n                            }}>\r\n                            {/* {category.postText.slice(0, 300)} */}\r\n                          </Typography>\r\n                          {!auth.user ? (\r\n                            <Link onClick={()=>swal({\r\n                              title: \"Are you logged in?\",\r\n                              text: \"Please login first to access further.\",\r\n                              icon: \"error\",\r\n                              dangerMode: true,\r\n                            })}>\r\n                              <Button variant=\"contained\" color=\"warning\">\r\n                              Read More\r\n                              </Button>\r\n                            </Link>\r\n                          ) : (\r\n                            <Link to={`/blogdetails/${category._id}`} style={{textDecoration: \"none\", color: \"blue\"}}>\r\n                              <Button variant=\"contained\" color=\"warning\">\r\n                              Read More\r\n                              </Button>\r\n                            </Link>\r\n                          )}\r\n                        </CardContent>\r\n                      </Card>\r\n                    </>\r\n                  );\r\n                })}\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"error\"\r\n                size=\"small\"\r\n                onClick={() => navigate(-1)}\r\n                sx={{ margin: 2 }}\r\n              >\r\n                Go Back\r\n              </Button>\r\n            </>\r\n          )}\r\n          {loadMoreData < category?.length && (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"error\"\r\n              sx={{ margin: 2 }}\r\n              onClick={handleMoreData}\r\n            >\r\n              Load More\r\n            </Button>\r\n          )}\r\n        </Container>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryDetails;\r\n","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\BlogDetails.jsx",["140","141","142","143","144","145"],[],"D:\\React_Practice\\blog_authentication_mui\\src\\pages\\Profile.jsx",["146"],[],"import React from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { useAuth } from \"../context/Auth\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\n\r\nconst Profile = () => {\r\n  const [auth, setAuth] = useAuth();\r\n \r\n  return (\r\n    <>\r\n      <Layout title={\"PhoenixTech-Profile\"}>\r\n        <TableContainer\r\n          sx={{\r\n            width: \"50%\",\r\n            margin: \"auto\",\r\n            marginTop: 10,\r\n            boxShadow: \"0px 0px 30px rgba(0,0,0,0.2)\",\r\n            borderRadius: 5,\r\n          }}\r\n        >\r\n          <Table>\r\n            <TableHead>\r\n                <TableRow>\r\n                    <TableCell align=\"center\" colSpan=\"2\" sx={{fontWeight: \"bold\", fontFamily: \"monospace\", fontSize: \"20px\"}}>Welcome {auth.user.name}</TableCell>\r\n                </TableRow>\r\n              <TableRow>\r\n                <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\r\n                  Name\r\n                </TableCell>\r\n                <TableCell align=\"center\">{auth.user.name}</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\r\n                  Email\r\n                </TableCell>\r\n                <TableCell align=\"center\">{auth.user.email}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell align=\"center\" sx={{ fontWeight: \"bold\" }}>\r\n                  Mobile\r\n                </TableCell>\r\n                <TableCell align=\"center\">{auth.user.mobile}</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\ApplyCourse.jsx",["147"],[],"import React from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { applyCourse } from \"../service/Api\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useAuth } from \"../context/Auth\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Container from \"@mui/material/Container\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Layout from \"../components/Layout\";\r\nimport { Box, FormControl  } from \"@mui/material\";\r\n\r\nconst ApplyCourse = () => {\r\n  const { register, handleSubmit } = useForm();\r\n  const [auth] = useAuth();\r\n  const { id, course } = useParams();\r\n  const navigate = useNavigate()\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const response = await applyCourse(id, data);\r\n      toast.success(response?.data?.message);\r\n      navigate('/courses')\r\n    } catch (error) {\r\n      toast.error(\"Something Went Wrong\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Layout title={\"Apply-Course\"}>\r\n        <Container>\r\n        <Box\r\n          sx={{\r\n            boxShadow: \"0px 0px 30px rgba(0,0,0,0.5)\",\r\n            mb: 5,\r\n          }}\r\n        >\r\n          <h2 style={{ paddingTop: 30, textAlign: \"center\" }}>Apply for {course}</h2>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <FormControl fullWidth >\r\n              <TextField\r\n                label=\"Name\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                color=\"error\"\r\n                focused\r\n                sx={{ ml: 5, mr: 5, marginTop: 5, }}\r\n                {...register(\"name\", { required: true })}\r\n              />\r\n              <TextField\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Don't worry!! Your mail id will remain private.\"\r\n                color=\"error\"\r\n                focused\r\n                sx={{ ml: 5, mr: 5, marginTop: 5 }}\r\n                {...register(\"email\", { required: true })}\r\n              />\r\n            <TextField\r\n              id=\"outlined-multiline-flexible\"\r\n              type=\"number\"\r\n              multiline\r\n              maxRows={5}\r\n              label=\"Phone Number\"\r\n              name=\"phone\"\r\n              color=\"error\"\r\n              focused\r\n              sx={{ ml: 5, mr: 5, marginTop: 5}}\r\n              {...register(\"phone\", { required: true })}\r\n            />\r\n            <TextField\r\n              id=\"outlined-multiline-flexible\"\r\n              type=\"text\"\r\n              multiline\r\n              maxRows={5}\r\n              label=\"City\"\r\n              name=\"city\"\r\n              color=\"error\"\r\n              focused\r\n              sx={{ ml: 5, mr: 5, marginTop: 5 }}\r\n              {...register(\"city\", { required: true })}\r\n            />\r\n            <TextField\r\n              id=\"outlined-multiline-flexible\"\r\n              type=\"text\"\r\n              multiline\r\n              maxRows={5}\r\n              label=\"Address\"\r\n              name=\"address\"\r\n              color=\"error\"\r\n              focused\r\n              sx={{ ml: 5, mr: 5, marginTop: 5 }}\r\n              {...register(\"address\", { required: true })}\r\n            />\r\n            <TextField\r\n              id=\"outlined-multiline-flexible\"\r\n              type=\"text\"\r\n              multiline\r\n              maxRows={5}\r\n              label=\"Qualification\"\r\n              name=\"qualification\"\r\n              color=\"error\"\r\n              focused\r\n              sx={{ ml: 5, mr: 5, marginTop: 5 }}\r\n              {...register(\"qualification\", { required: true })}\r\n            />\r\n            <TextField\r\n              id=\"outlined-multiline-flexible\"\r\n              type=\"text\"\r\n              multiline\r\n              maxRows={5}\r\n              label=\"Programming Knowledge\"\r\n              name=\"programing_knowledge\"\r\n              color=\"error\"\r\n              focused\r\n              sx={{ ml: 5, mr: 5, marginTop: 5 }}\r\n              {...register(\"programing_knowledge\", { required: true })}\r\n            />\r\n            <TextField\r\n              id=\"outlined-multiline-flexible\"\r\n              type=\"text\"\r\n              multiline\r\n              maxRows={5}\r\n              label=\"Experience\"\r\n              name=\"experiance\"\r\n              color=\"error\"\r\n              focused\r\n              sx={{ marginTop: 5, ml: 5, mr: 5 }}\r\n              {...register(\"experiance\", { required: true })}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"error\"\r\n              sx={{ margin: 5 }}\r\n            >\r\n              Apply\r\n            </Button>\r\n            </FormControl>\r\n          </form>\r\n        </Box>\r\n        </Container>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ApplyCourse;\r\n","D:\\React_Practice\\blog_authentication_mui\\src\\auth\\Register.jsx",["148","149"],[],"import React, { useState } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport { useAuth } from \"../context/Auth\";\r\nimport { registerData } from \"../service/Api\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { Button, Container, FormControl, FormGroup, Grid, Input, InputLabel } from \"@mui/material\";\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nconst Register = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [loading, setLoading] = useState()\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading('logging')\r\n    const response = await registerData({\r\n      name,\r\n      email,\r\n      mobile,\r\n      password,\r\n    });\r\n    if (response) {\r\n      navigate(\"/\");\r\n      console.log(\"reg\", response.data);\r\n      toast.success(response?.data?.message)\r\n    } else {\r\n      toast.error(\"Something Went Wrong\")\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Layout title={\"PhoenixTech-Register\"}>\r\n        <Container\r\n          sx={{\r\n            marginTop: \"5%\",\r\n            boxShadow: \"0px 0px 30px rgba(0,0,0,0.5)\",\r\n            borderRadius: \"20px\",\r\n          }}\r\n        >\r\n          <Grid\r\n            container\r\n            rowSpacing={1}\r\n            columnSpacing={{ xs: 1, sm: 2, md: 6 }}\r\n            \r\n          >\r\n            <Grid item xs={4} width={\"auto\"}>\r\n              <img\r\n                src=\"/assets/register_img.jpg\"\r\n                alt=\"\"\r\n                style={{ margin: \"30% 0% 20% 10%\", height: \"45vh\" }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={8} width={\"auto\"}>\r\n              <h3\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  fontWeight: \"bold\",\r\n                  color: \"#C62828\",\r\n                  fontSize: \"30px\",\r\n                  marginTop: 30,\r\n                }}\r\n              >\r\n                REGISTER HERE\r\n              </h3>\r\n              <form onSubmit={handleSubmit}>\r\n                <FormGroup\r\n                  sx={{\r\n                    width: \"auto\",\r\n                    marginLeft: 10,\r\n                    paddingTop: 2,\r\n                    paddingLeft: 5,\r\n                    paddingRight: 15,\r\n                  }}\r\n                >\r\n                    <FormControl sx={{ paddingBottom: 2 }}>\r\n                    <InputLabel>Name</InputLabel>\r\n                    <Input\r\n                      type=\"text\"\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}\r\n                      required\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl sx={{ paddingBottom: 2 }}>\r\n                    <InputLabel>Email</InputLabel>\r\n                    <Input\r\n                      type=\"email\"\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}\r\n                      required\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl sx={{ paddingBottom: 2 }}>\r\n                    <InputLabel>Mobile</InputLabel>\r\n                    <Input\r\n                      type=\"number\"\r\n                      value={mobile}\r\n                      onChange={(e) => setMobile(e.target.value)}\r\n                      required\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl>\r\n                    <InputLabel>Password</InputLabel>\r\n                    <Input\r\n                      type=\"password\"\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      required\r\n                    />\r\n                  </FormControl>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"error\"\r\n                    sx={{ mt: 5, mb: 2 }}\r\n                    type=\"submit\"\r\n                  >\r\n                    {loading === \"logging\" ? (\r\n                      <>\r\n                        <CircularProgress\r\n                          sx={{ color: \"white\", marginRight: 1 }}\r\n                          size={\"1rem\"}\r\n                        />\r\n                        Processing ...\r\n                      </>\r\n                    ) : (\r\n                      \"Register\"\r\n                    )}\r\n                  </Button>\r\n                </FormGroup>\r\n              </form>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","D:\\React_Practice\\blog_authentication_mui\\src\\service\\Api.jsx",[],[],["150"],"D:\\React_Practice\\blog_authentication_mui\\src\\components\\Layout.jsx",[],[],"D:\\React_Practice\\blog_authentication_mui\\src\\service\\AxiosInstance.jsx",[],[],"D:\\React_Practice\\blog_authentication_mui\\src\\components\\Header.jsx",["151","152","153","154","155","156","157","158","159","160"],[],"import React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport { useAuth } from \"../context/Auth\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst privatePage = [\"Home\", \"About\", \"Courses\", \"Blog\", \"Contact\"];\r\nconst publicPage = [\"Home\", \"About\", \"Courses\", \"Blog\", \"Contact\", \"Login\"];\r\nconst settings = [\"Profile\", \"Logout\"];\r\n\r\nconst Header = () => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n  const [auth, setAuth] = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setAuth({\r\n      ...auth,\r\n      user: null,\r\n      token: \"\",\r\n    });\r\n    localStorage.removeItem(\"auth\");\r\n    toast.success(\"Logout Successfully\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  // Modal\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const style_Logout = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: 200,\r\n    bgcolor: \"background.paper\",\r\n    boxShadow: 24,\r\n    p: 2,\r\n  };\r\n\r\n  const sweetPop = ()=>{\r\n    swal(\"Are you sure?\", {\r\n      dangerMode: true,\r\n      buttons: {\r\n        cancel: {\r\n            text: \"Cancel\",\r\n            value: false,\r\n            visible: true,\r\n        },\r\n        confirm: {\r\n            text: \"Confirm\",\r\n            value: true,\r\n            visible: true,\r\n        }\r\n    } \r\n    },)\r\n    .then((value)=>{\r\n      if(value){\r\n        handleLogout()\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"sticky\" color=\"grey\">\r\n        <Container maxWidth=\"xl\">\r\n          <Toolbar disableGutters>\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"a\"\r\n              href=\"#app-bar-with-responsive-menu\"\r\n              sx={{\r\n                mr: 2,\r\n                display: { xs: \"none\", md: \"flex\" },\r\n                flexGrow: 1,\r\n                fontFamily: \"monospace\",\r\n                fontWeight: 700,\r\n                letterSpacing: \".3rem\",\r\n                color: \"#D32F2F\",\r\n                textDecoration: \"none\",\r\n              }}\r\n            >\r\n              PhoenixTech\r\n            </Typography>\r\n\r\n            <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleOpenNavMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElNav}\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"left\",\r\n                }}\r\n                open={Boolean(anchorElNav)}\r\n                onClose={handleCloseNavMenu}\r\n                sx={{\r\n                  display: { xs: \"block\", md: \"none\" },\r\n                }}\r\n              >\r\n                {!auth.user\r\n                  ? publicPage.map((page) => {\r\n                      return (\r\n                        <>\r\n                          <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                            <Typography\r\n                              textAlign=\"center\"\r\n                              onClick={\r\n                                page == \"Home\"\r\n                                  ? () => navigate(`/`)\r\n                                  : () => navigate(`/${page}`)\r\n                              }\r\n                            >\r\n                              {page}\r\n                            </Typography>\r\n                          </MenuItem>\r\n                        </>\r\n                      );\r\n                    })\r\n                  : privatePage.map((page) => {\r\n                      return (\r\n                        <>\r\n                          <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                            <Typography\r\n                              textAlign=\"center\"\r\n                              onClick={\r\n                                page == \"Home\"\r\n                                  ? () => navigate(`/`)\r\n                                  : () => navigate(`/${page}`)\r\n                              }\r\n                            >\r\n                              {page}\r\n                            </Typography>\r\n                          </MenuItem>\r\n                        </>\r\n                      );\r\n                    })}\r\n              </Menu>\r\n            </Box>\r\n            <Typography\r\n              variant=\"h5\"\r\n              noWrap\r\n              component=\"a\"\r\n              href=\"#app-bar-with-responsive-menu\"\r\n              sx={{\r\n                mr: 2,\r\n                display: { xs: \"flex\", md: \"none\" },\r\n                flexGrow: 1,\r\n                fontFamily: \"monospace\",\r\n                fontWeight: 700,\r\n                letterSpacing: \".3rem\",\r\n                color: \"#D32F2F\",\r\n                textDecoration: \"none\",\r\n              }}\r\n            >\r\n              PhoenixTech\r\n            </Typography>\r\n            <Box sx={{ display: { xs: \"none\", md: \"flex\" },  }}>\r\n              {!auth.user\r\n                ? publicPage.map((page) => (\r\n                    <Button\r\n                      key={page}\r\n                      onClick={handleCloseNavMenu}\r\n                      sx={{ my: 2, color: \"black\", display: \"block\", mr: 2, fontWeight: \"bold\", fontStyle: \"italic\", \"&:hover\": { color: \"red\" } }}\r\n                      component={Link}\r\n                      to={page == \"Home\" ? `/` : `/${page}`}\r\n                    >\r\n                      {page}\r\n                    </Button>\r\n                  ))\r\n                : privatePage.map((page) => (\r\n                    <Button\r\n                      key={page}\r\n                      onClick={handleCloseNavMenu}\r\n                      sx={{ my: 2, color: \"black\", display: \"block\", mr: 2, fontWeight: \"bold\", fontStyle: \"italic\", \"&:hover\": { color: \"red\" } }}\r\n                      component={Link}\r\n                      to={page == \"Home\" ? `/` : `/${page}`}\r\n                    >\r\n                      {page}\r\n                    </Button>\r\n                  ))}\r\n            </Box>\r\n\r\n            {!auth.user ? null : (\r\n              <Box sx={{ flexGrow: 0 }}>\r\n                <Tooltip title=\"Open settings\">\r\n                  <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                    <Avatar\r\n                      alt={auth.user.name.toUpperCase()}\r\n                      src=\"/assets/login_bg.pn\"\r\n                      sx={{\r\n                        border: \"3px solid white\",\r\n                        boxShadow: \"0px 0px 30px rgba(0,0,0,0.5)\",\r\n                        backgroundColor: \"#0D80D8\"\r\n                      }}\r\n                    />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Menu\r\n                  sx={{ mt: \"45px\" }}\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorElUser}\r\n                  anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  open={Boolean(anchorElUser)}\r\n                  onClose={handleCloseUserMenu}\r\n                >\r\n                  {settings.map((setting) => (\r\n                    <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                      <Typography\r\n                        textAlign=\"center\"\r\n                        onClick={\r\n                          setting == \"Logout\"\r\n                            ? sweetPop\r\n                            : () => navigate(`/${setting}`)\r\n                        }\r\n                      >\r\n                        {setting}\r\n                      </Typography>\r\n                      {/* <Modal\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"modal-modal-title\"\r\n                        aria-describedby=\"modal-modal-description\"\r\n                      >\r\n                        <Box sx={style_Logout}>\r\n                        <img\r\n                                src={\"/assets/logout.png\"}\r\n                                alt=\"\"\r\n                                height={150}\r\n                                style={{\r\n                                  textAlign: \"center\",\r\n                                  margin: \"auto\",\r\n                                  display: \"block\",\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              />\r\n                          <Typography\r\n                            id=\"modal-modal-title\"\r\n                            variant=\"h6\"\r\n                            component=\"h2\"\r\n                            textAlign={\"center\"}\r\n                          >\r\n                            Wanna go away?\r\n                          </Typography>\r\n                          <Link\r\n                            color=\"error\"\r\n                            onClick={handleLogout}\r\n                            style={{\r\n                              marginLeft: \"35%\",\r\n                              textDecoration: \"none\",\r\n                              color: \"red\",\r\n                            }}\r\n                          >\r\n                            Logout\r\n                          </Link>\r\n                        </Box>\r\n                      </Modal> */}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Menu>\r\n              </Box>\r\n            )}\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\React_Practice\\blog_authentication_mui\\src\\components\\Footer.jsx",["161","162"],[],"import React from \"react\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport { useAuth } from \"../context/Auth\";\r\nimport Box from '@mui/material/Box';\r\nimport { Link } from \"react-router-dom\";\r\nimport TextField from '@mui/material/TextField';\r\nimport { Button } from \"@mui/material\";\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\n\r\nconst Footer = () => {\r\n  const privatePage = [\"Home\", \"About\", \"Courses\", \"Blog\", \"Contact\"];\r\n  const publicPage = [\"Home\", \"About\", \"Courses\", \"Blog\", \"Contact\", \"Login\"];\r\n  const services = [\"Web Design\", \"Web Development\", \"Product Management\", \"Marketing\", \"Graphic Design\"]\r\n  const [auth] = useAuth();\r\n  return (\r\n    <>\r\n      <Container\r\n        maxWidth=\"xl\"\r\n        sx={{ backgroundColor: \"#1E1E1E\", height: \"auto\", mt: 2 }}\r\n      >\r\n        <Grid\r\n          container\r\n          rowSpacing={1}\r\n          columnSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n          direction={{ xs: \"column\", md: \"row\" }}\r\n          justifyContent={{ xs: \"center\", md: \"flex-end\" }}\r\n          \r\n        >\r\n          <Grid item xs={3} sx={{mt: 2}}>\r\n            <Typography\r\n              variant=\"h5\"\r\n              sx={{ color: \"white\", fontWeight: \"bold\", textAlign: \"center\",}}\r\n            >\r\n              PhoenixTech\r\n            </Typography>\r\n            <Box width={\"50%\"} m={\"auto\"}>\r\n            <Typography sx={{ color: \"white\", }}>\r\n              Eco Intelligent Park, Unit No- 7E, 7th Floor, Block- EM, Plot-9,\r\n              Salt Lake Sector-5, Kolkata 700091, India\r\n            </Typography>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={3} sx={{mt: 2}}>\r\n            <Typography\r\n              variant=\"h5\"\r\n              sx={{ color: \"white\", fontWeight: \"bold\", textAlign: \"center\" }}\r\n            >\r\n              Useful Links\r\n            </Typography>\r\n            <List sx={{m: \"auto\"}}>\r\n              {!auth.user\r\n                ? publicPage?.map((page) => {\r\n                    return (\r\n                      <>\r\n                        <Box width={\"50%\"} m={\"auto\"}>\r\n                        <ListItem sx={{}}>\r\n                          <ListItemIcon>\r\n                            <ArrowForwardIosIcon\r\n                              sx={{ color: \"red\", textAlign: \"center\" }}\r\n                            />\r\n                          </ListItemIcon>\r\n                          <Link style={{textDecoration: \"none\", }} to={page==\"Home\" ? ('/') : (`/${page}`)}>\r\n                          <ListItemText\r\n                            primary={page}\r\n                            sx={{ color: \"white\" }}\r\n                          />\r\n                          </Link>\r\n                        </ListItem>\r\n                        </Box>\r\n                      </>\r\n                    );\r\n                  })\r\n                : privatePage?.map((page) => {\r\n                    return (\r\n                      <>\r\n                      <Box width={\"50%\"} m={\"auto\"}>\r\n                        <ListItem>\r\n                          <ListItemIcon>\r\n                            <ArrowForwardIosIcon\r\n                              sx={{ color: \"red\", textAlign: \"center\" }}\r\n                            />\r\n                          </ListItemIcon>\r\n                          <Link style={{textDecoration: \"none\", }} to={page==\"Home\" ? ('/') : (`/${page}`)}>\r\n                          <ListItemText\r\n                            primary={page}\r\n                            sx={{ color: \"white\" }}\r\n                          />\r\n                          </Link>\r\n                        </ListItem>\r\n                        </Box>\r\n                      </>\r\n                    );\r\n                  })}\r\n            </List>\r\n          </Grid>\r\n          <Grid item xs={3} sx={{mt: 2}}>\r\n            <Typography\r\n              variant=\"h5\"\r\n              sx={{ color: \"white\", fontWeight: \"bold\", textAlign: \"center\" }}\r\n            >\r\n              Our Services\r\n            </Typography>\r\n            <List sx={{m: \"auto\"}}>\r\n              {\r\n                services?.map((service)=>{\r\n                  return (\r\n                    <>\r\n                    <Box width={\"65%\"} m={\"auto\"}>\r\n                      <ListItem>\r\n                          <ListItemIcon>\r\n                            <ArrowForwardIosIcon\r\n                              sx={{ color: \"red\", textAlign: \"center\" }}\r\n                            />\r\n                          </ListItemIcon>\r\n                          <Link style={{textDecoration: \"none\", }} to={`/${service}`}>\r\n                          <ListItemText\r\n                            primary={service}\r\n                            sx={{ color: \"white\" }}\r\n                          />\r\n                          </Link>\r\n                        </ListItem>\r\n                        </Box>\r\n                    </>\r\n                  )\r\n                })\r\n              }\r\n            </List>\r\n          </Grid>\r\n          <Grid item xs={3} sx={{mt: 2}}>\r\n            <Typography\r\n              variant=\"h5\"\r\n              sx={{ color: \"white\", fontWeight: \"bold\", textAlign: \"center\" }}\r\n            >\r\n              Join Our Newsletter\r\n            </Typography>\r\n            <Typography align={\"center\"} color={\"white\"} mt={2}>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Odio, doloremque?\r\n            </Typography>\r\n            <ButtonGroup sx={{ mt: 2, pl: 3, mb: 2, alignContent: \"center\"}} m={\"auto\"}>\r\n            <TextField id=\"outlined-basic\" variant=\"outlined\" sx={{backgroundColor: \"white\", borderRadius: \"10px 0px 0px 10px\", width: \"auto\"}}/>\r\n            <Button variant=\"contained\" color=\"error\" sx={{borderRadius: \"0px 10px 10px 0px\", pt: 2, pb: 2}}>Submit</Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n        </Grid>\r\n        </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","D:\\React_Practice\\blog_authentication_mui\\src\\pages\\SearchPage.jsx",[],[],"D:\\React_Practice\\blog_authentication_mui\\src\\pages\\Paginations\\Pagnition.jsx",[],[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":23,"column":7,"nodeType":"167","endLine":23,"endColumn":9,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":69,"column":9,"nodeType":"171","messageId":"172","endLine":69,"endColumn":23},{"ruleId":"169","severity":1,"message":"173","line":15,"column":10,"nodeType":"171","messageId":"172","endLine":15,"endColumn":21},{"ruleId":"165","severity":1,"message":"174","line":31,"column":6,"nodeType":"167","endLine":31,"endColumn":8,"suggestions":"175"},{"ruleId":"165","severity":1,"message":"176","line":47,"column":6,"nodeType":"167","endLine":47,"endColumn":8,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":77,"column":15,"nodeType":"180","endLine":82,"endColumn":17},{"ruleId":"181","severity":1,"message":"182","line":40,"column":11,"nodeType":"180","endLine":48,"endColumn":12},{"ruleId":"169","severity":1,"message":"183","line":21,"column":8,"nodeType":"171","messageId":"172","endLine":21,"endColumn":19},{"ruleId":"165","severity":1,"message":"184","line":43,"column":6,"nodeType":"167","endLine":43,"endColumn":8,"suggestions":"185"},{"ruleId":"169","severity":1,"message":"186","line":36,"column":10,"nodeType":"171","messageId":"172","endLine":36,"endColumn":18},{"ruleId":"169","severity":1,"message":"187","line":38,"column":9,"nodeType":"171","messageId":"172","endLine":38,"endColumn":17},{"ruleId":"169","severity":1,"message":"188","line":66,"column":10,"nodeType":"171","messageId":"172","endLine":66,"endColumn":14},{"ruleId":"189","severity":1,"message":"190","line":137,"column":16,"nodeType":"191","messageId":"192","endLine":137,"endColumn":18},{"ruleId":"165","severity":1,"message":"193","line":148,"column":6,"nodeType":"167","endLine":148,"endColumn":13,"suggestions":"194"},{"ruleId":"165","severity":1,"message":"195","line":153,"column":6,"nodeType":"167","endLine":153,"endColumn":8,"suggestions":"196"},{"ruleId":"169","severity":1,"message":"197","line":12,"column":16,"nodeType":"171","messageId":"172","endLine":12,"endColumn":23},{"ruleId":"169","severity":1,"message":"188","line":15,"column":10,"nodeType":"171","messageId":"172","endLine":15,"endColumn":14},{"ruleId":"169","severity":1,"message":"198","line":3,"column":10,"nodeType":"171","messageId":"172","endLine":3,"endColumn":17},{"ruleId":"169","severity":1,"message":"199","line":5,"column":23,"nodeType":"171","messageId":"172","endLine":5,"endColumn":27},{"ruleId":"163","replacedBy":"200"},{"ruleId":"169","severity":1,"message":"201","line":17,"column":8,"nodeType":"171","messageId":"172","endLine":17,"endColumn":13},{"ruleId":"169","severity":1,"message":"202","line":57,"column":10,"nodeType":"171","messageId":"172","endLine":57,"endColumn":14},{"ruleId":"169","severity":1,"message":"203","line":59,"column":9,"nodeType":"171","messageId":"172","endLine":59,"endColumn":19},{"ruleId":"169","severity":1,"message":"204","line":60,"column":9,"nodeType":"171","messageId":"172","endLine":60,"endColumn":20},{"ruleId":"169","severity":1,"message":"205","line":61,"column":9,"nodeType":"171","messageId":"172","endLine":61,"endColumn":21},{"ruleId":"189","severity":1,"message":"190","line":156,"column":38,"nodeType":"191","messageId":"192","endLine":156,"endColumn":40},{"ruleId":"189","severity":1,"message":"190","line":174,"column":38,"nodeType":"191","messageId":"192","endLine":174,"endColumn":40},{"ruleId":"189","severity":1,"message":"190","line":213,"column":32,"nodeType":"191","messageId":"192","endLine":213,"endColumn":34},{"ruleId":"189","severity":1,"message":"190","line":224,"column":32,"nodeType":"191","messageId":"192","endLine":224,"endColumn":34},{"ruleId":"189","severity":1,"message":"190","line":267,"column":35,"nodeType":"191","messageId":"192","endLine":267,"endColumn":37},{"ruleId":"189","severity":1,"message":"190","line":69,"column":76,"nodeType":"191","messageId":"192","endLine":69,"endColumn":78},{"ruleId":"189","severity":1,"message":"190","line":90,"column":76,"nodeType":"191","messageId":"192","endLine":90,"endColumn":78},"no-new-object",["206"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array. You can also do a functional update 'setAuth(a => ...)' if you only need 'auth' in the 'setAuth' call.","ArrayExpression",["207"],"no-unused-vars","'handleMoreData' is assigned a value but never used.","Identifier","unusedVar","'CardActions' is defined but never used.","React Hook useEffect has a missing dependency: 'CourseData'. Either include it or remove the dependency array.",["208"],"React Hook useEffect has a missing dependency: 'getTestimonial'. Either include it or remove the dependency array.",["209"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'ThumbUpIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'getCategoryDetails'. Either include it or remove the dependency array.",["210"],"'loading2' is assigned a value but never used.","'navigate' is assigned a value but never used.","'auth' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'cat_data'. Either include it or remove the dependency array.",["211"],"React Hook useEffect has missing dependencies: 'getBlogDetailsData' and 'getComments'. Either include them or remove the dependency array.",["212"],"'setAuth' is assigned a value but never used.","'useAuth' is defined but never used.","'Link' is defined but never used.",["206"],"'Modal' is defined but never used.","'open' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'style_Logout' is assigned a value but never used.","no-object-constructor",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},"Update the dependencies array to be: [auth]",{"range":"225","text":"226"},"Update the dependencies array to be: [CourseData]",{"range":"227","text":"228"},"Update the dependencies array to be: [getTestimonial]",{"range":"229","text":"230"},"Update the dependencies array to be: [getCategoryDetails]",{"range":"231","text":"232"},"Update the dependencies array to be: [catId, cat_data]",{"range":"233","text":"234"},"Update the dependencies array to be: [getBlogDetailsData, getComments]",{"range":"235","text":"236"},[554,556],"[auth]",[1098,1100],"[CourseData]",[1636,1638],"[getTestimonial]",[1327,1329],"[getCategoryDetails]",[4392,4399],"[catId, cat_data]",[4478,4480],"[getBlogDetailsData, getComments]"]