{"ast":null,"code":"import axios from \"axios\";\nimport { axiosInstance } from \"./AxiosInstance\";\n\n// Authentication Details\n// Resgister API\n\nexport const registerData = async data => {\n  try {\n    return await axiosInstance.post(process.env.REACT_APP_URL`/api/register`, data);\n  } catch (error) {\n    console.log('Error while calling api.');\n  }\n};\n\n//  Login API\nexport const loginData = async data => {\n  try {\n    return await axios.post(`${process.env.BASE_URL}/api/login`, data);\n  } catch (error) {\n    console.log('Error while calling api.');\n  }\n};\n\n// Blog \n\n// Get Blog Data\nexport const allBlogData = async () => {\n  try {\n    return await axios.get(`${process.env.BASE_URL}/api/allBlog`);\n  } catch (error) {\n    console.log(\"Error while fetching the api.\");\n  }\n};\n\n// Blog Details\n\nexport const blogDetailsData = async id => {\n  try {\n    return await axios.get(`${process.env.BASE_URL}/api/blogdetails/${id}`);\n  } catch (error) {\n    console.log('Error while fetching the api data.');\n  }\n};\n\n// All Category\nexport const AllCategoryData = async () => {\n  try {\n    return await axios.get(`${process.env.BASE_URL}/api/showallcategory`);\n  } catch (error) {\n    console.log(\"Error while fetching api data.\");\n  }\n};\n\n// Recent Post \n_c = AllCategoryData;\nexport const recentPostData = async () => {\n  try {\n    return await axios.get(`${process.env.BASE_URL}/api/letest-post`);\n  } catch (error) {\n    console.log('Error while fetching api data.');\n  }\n};\n\n// Comments\nexport const commentsData = async id => {\n  try {\n    return await axios.get(`${process.env.BASE_URL}/api/comment/${id}`);\n  } catch (error) {\n    console.log(\"Error while fetching the api data.\");\n  }\n};\n\n// Post Comments \n\nexport const postComments = async (id, data) => {\n  try {\n    return await axios.post(`${process.env.BASE_URL}/api/blog/${id}/comment/create`, data);\n  } catch (error) {\n    console.log('Error while posting data on the api.');\n  }\n};\n\n// Category Details\nexport const categoryDetailsData = async id => {\n  try {\n    return await axios.get(`${process.env.BASE_URL}/api/category/post/${id}`);\n  } catch (error) {\n    console.log('Error while fetching api data.');\n  }\n};\n\n// Serach \nexport const searchData = async () => {\n  try {\n    return await axios.get(`${process.env.BASE_URL}/api/search`);\n  } catch (error) {\n    console.log('Error while fetching the api data');\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"AllCategoryData\");","map":{"version":3,"names":["axios","axiosInstance","registerData","data","post","process","env","REACT_APP_URL","error","console","log","loginData","BASE_URL","allBlogData","get","blogDetailsData","id","AllCategoryData","_c","recentPostData","commentsData","postComments","categoryDetailsData","searchData","$RefreshReg$"],"sources":["D:/React_Practice/blog_authentication_mui/src/service/Api.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { axiosInstance } from \"./AxiosInstance\";\r\n\r\n// Authentication Details\r\n// Resgister API\r\n\r\nexport const registerData =async (data)=>{\r\n    try {\r\n        return await axiosInstance.post(process.env.REACT_APP_URL`/api/register`, data)\r\n    }\r\n    catch(error){\r\n        console.log('Error while calling api.');\r\n    }\r\n}\r\n\r\n//  Login API\r\nexport const loginData =async (data)=>{\r\n    try {\r\n        return await axios.post(`${process.env.BASE_URL}/api/login`, data)\r\n    }\r\n    catch(error){\r\n        console.log('Error while calling api.');\r\n    }\r\n}\r\n\r\n// Blog \r\n\r\n\r\n\r\n// Get Blog Data\r\nexport const allBlogData = async ()=>{\r\n    try{\r\n        return await axios.get(`${process.env.BASE_URL}/api/allBlog`)\r\n    }catch(error){\r\n        console.log(\"Error while fetching the api.\");\r\n    }\r\n}\r\n\r\n// Blog Details\r\n\r\nexport const blogDetailsData = async (id)=>{\r\n    try {\r\n        return await axios.get(`${process.env.BASE_URL}/api/blogdetails/${id}`)\r\n    }catch (error){\r\n        console.log('Error while fetching the api data.');\r\n    }\r\n}\r\n\r\n// All Category\r\nexport const AllCategoryData = async ()=>{\r\n    try{\r\n        return await axios.get(`${process.env.BASE_URL}/api/showallcategory`)\r\n    }catch(error){\r\n        console.log(\"Error while fetching api data.\");\r\n    }\r\n}\r\n\r\n// Recent Post \r\nexport const recentPostData = async ()=>{\r\n    try{\r\n        return await axios.get (`${process.env.BASE_URL}/api/letest-post`)\r\n    }catch(error){\r\n        console.log('Error while fetching api data.');\r\n    }\r\n}\r\n\r\n// Comments\r\nexport const commentsData = async(id)=>{\r\n    try {\r\n        return await axios.get(`${process.env.BASE_URL}/api/comment/${id}`)\r\n    }catch(error){\r\n        console.log(\"Error while fetching the api data.\");\r\n    }\r\n}\r\n\r\n// Post Comments \r\n\r\nexport const postComments = async (id, data)=>{\r\n    try{\r\n        return await axios.post(`${process.env.BASE_URL}/api/blog/${id}/comment/create`, data)\r\n    }catch(error){\r\n        console.log('Error while posting data on the api.');\r\n    }\r\n}\r\n\r\n// Category Details\r\nexport const categoryDetailsData = async (id)=>{\r\n    try{\r\n        return await axios.get (`${process.env.BASE_URL}/api/category/post/${id}`)\r\n    }catch(error){\r\n        console.log('Error while fetching api data.');\r\n    }\r\n}\r\n\r\n// Serach \r\nexport const searchData = async()=>{\r\n    try{\r\n        return await axios.get(`${process.env.BASE_URL}/api/search`)\r\n    }catch(error){\r\n        console.log('Error while fetching the api data');\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}