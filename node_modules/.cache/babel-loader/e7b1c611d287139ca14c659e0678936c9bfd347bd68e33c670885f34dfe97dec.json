{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Practice\\\\blog_authentication_mui\\\\src\\\\components\\\\Header.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Container from \"@mui/material/Container\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { useAuth } from \"../context/Auth\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport Modal from \"@mui/material/Modal\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst privatePage = [\"Home\", \"About\", \"Courses\", \"Blog\", \"Contact\"];\nconst publicPage = [\"Home\", \"About\", \"Courses\", \"Blog\", \"Contact\", \"Login\"];\nconst settings = [\"Profile\", \"Logout\"];\nconst Header = () => {\n  _s();\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n  const [auth, setAuth] = useAuth();\n  const navigate = useNavigate();\n  const handleOpenNavMenu = event => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = event => {\n    setAnchorElUser(event.currentTarget);\n  };\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n  const handleLogout = () => {\n    setAuth({\n      ...auth,\n      user: null,\n      token: \"\"\n    });\n    localStorage.removeItem(\"auth\");\n    toast.success(\"Logout Successfully\");\n    navigate(\"/\");\n  };\n\n  // Modal\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const style_Logout = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 200,\n    bgcolor: \"background.paper\",\n    boxShadow: 24,\n    p: 2\n  };\n  const sweetPop = () => {\n    swal(\"Are you sure?\", {\n      dangerMode: true,\n      buttons: {\n        cancel: {\n          text: \"Cancel\",\n          value: false,\n          visible: true\n        },\n        confirm: {\n          text: \"Confirm\",\n          value: true,\n          visible: true\n        }\n      }\n    }).then(value => {\n      if (value) {\n        handleLogout();\n      }\n    });\n  };\n  const imgUrl = \"https://restapinodejs.onrender.com\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"sticky\",\n      color: \"grey\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          disableGutters: true,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            noWrap: true,\n            component: \"a\",\n            href: \"#app-bar-with-responsive-menu\",\n            sx: {\n              mr: 2,\n              display: {\n                xs: \"none\",\n                md: \"flex\"\n              },\n              flexGrow: 1,\n              fontFamily: \"monospace\",\n              fontWeight: 700,\n              letterSpacing: \".3rem\",\n              color: \"#D32F2F\",\n              textDecoration: \"none\"\n            },\n            children: \"PhoenixTech\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              display: {\n                xs: \"flex\",\n                md: \"none\"\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: \"large\",\n              \"aria-label\": \"account of current user\",\n              \"aria-controls\": \"menu-appbar\",\n              \"aria-haspopup\": \"true\",\n              onClick: handleOpenNavMenu,\n              color: \"inherit\",\n              children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              id: \"menu-appbar\",\n              anchorEl: anchorElNav,\n              anchorOrigin: {\n                vertical: \"bottom\",\n                horizontal: \"left\"\n              },\n              keepMounted: true,\n              transformOrigin: {\n                vertical: \"top\",\n                horizontal: \"left\"\n              },\n              open: Boolean(anchorElNav),\n              onClose: handleCloseNavMenu,\n              sx: {\n                display: {\n                  xs: \"block\",\n                  md: \"none\"\n                }\n              },\n              children: !auth.user ? publicPage.map(page => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                    onClick: handleCloseNavMenu,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      textAlign: \"center\",\n                      onClick: page == \"Home\" ? () => navigate(`/`) : () => navigate(`/${page}`),\n                      children: page\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 29\n                    }, this)\n                  }, page, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false);\n              }) : privatePage.map(page => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(MenuItem, {\n                    onClick: handleCloseNavMenu,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      textAlign: \"center\",\n                      onClick: page == \"Home\" ? () => navigate(`/`) : () => navigate(`/${page}`),\n                      children: page\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 29\n                    }, this)\n                  }, page, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            noWrap: true,\n            component: \"a\",\n            href: \"#app-bar-with-responsive-menu\",\n            sx: {\n              mr: 2,\n              display: {\n                xs: \"flex\",\n                md: \"none\"\n              },\n              flexGrow: 1,\n              fontFamily: \"monospace\",\n              fontWeight: 700,\n              letterSpacing: \".3rem\",\n              color: \"#D32F2F\",\n              textDecoration: \"none\"\n            },\n            children: \"PhoenixTech\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: {\n                xs: \"none\",\n                md: \"flex\"\n              }\n            },\n            children: !auth.user ? publicPage.map(page => /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCloseNavMenu,\n              sx: {\n                my: 2,\n                color: \"black\",\n                display: \"block\",\n                mr: 2,\n                fontWeight: \"bold\",\n                fontStyle: \"italic\",\n                \"&:hover\": {\n                  color: \"red\"\n                }\n              },\n              component: Link,\n              to: page == \"Home\" ? `/` : `/${page}`,\n              children: page\n            }, page, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 21\n            }, this)) : privatePage.map(page => /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCloseNavMenu,\n              sx: {\n                my: 2,\n                color: \"black\",\n                display: \"block\",\n                mr: 2,\n                fontWeight: \"bold\",\n                fontStyle: \"italic\",\n                \"&:hover\": {\n                  color: \"red\"\n                }\n              },\n              component: Link,\n              to: page == \"Home\" ? `/` : `/${page}`,\n              children: page\n            }, page, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), !auth.user ? null : /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Open settings\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleOpenUserMenu,\n                sx: {\n                  p: 0\n                },\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  alt: auth.user.name.toUpperCase(),\n                  src: ``,\n                  sx: {\n                    border: \"3px solid white\",\n                    boxShadow: \"0px 0px 30px rgba(0,0,0,0.5)\",\n                    backgroundColor: \"#0D80D8\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              sx: {\n                mt: \"45px\"\n              },\n              id: \"menu-appbar\",\n              anchorEl: anchorElUser,\n              anchorOrigin: {\n                vertical: \"top\",\n                horizontal: \"right\"\n              },\n              keepMounted: true,\n              transformOrigin: {\n                vertical: \"top\",\n                horizontal: \"right\"\n              },\n              open: Boolean(anchorElUser),\n              onClose: handleCloseUserMenu,\n              children: settings.map(setting => /*#__PURE__*/_jsxDEV(MenuItem, {\n                onClick: handleCloseUserMenu,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  textAlign: \"center\",\n                  onClick: setting == \"Logout\" ? sweetPop : () => navigate(`/${setting}`),\n                  children: setting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this)\n              }, setting, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Header, \"mGaqdR59tHhsF6SmAJhvy19cBYM=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","AppBar","Box","Toolbar","IconButton","Typography","Menu","MenuIcon","Container","Avatar","Button","Tooltip","MenuItem","useAuth","Link","useNavigate","toast","Modal","swal","jsxDEV","_jsxDEV","Fragment","_Fragment","privatePage","publicPage","settings","Header","_s","anchorElNav","setAnchorElNav","useState","anchorElUser","setAnchorElUser","auth","setAuth","navigate","handleOpenNavMenu","event","currentTarget","handleOpenUserMenu","handleCloseNavMenu","handleCloseUserMenu","handleLogout","user","token","localStorage","removeItem","success","open","setOpen","handleOpen","handleClose","style_Logout","position","top","left","transform","width","bgcolor","boxShadow","p","sweetPop","dangerMode","buttons","cancel","text","value","visible","confirm","then","imgUrl","children","color","maxWidth","disableGutters","variant","noWrap","component","href","sx","mr","display","xs","md","flexGrow","fontFamily","fontWeight","letterSpacing","textDecoration","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","onClose","map","page","textAlign","my","fontStyle","to","title","alt","name","toUpperCase","src","border","backgroundColor","mt","setting","_c","$RefreshReg$"],"sources":["D:/React_Practice/blog_authentication_mui/src/components/Header.jsx"],"sourcesContent":["import React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport { useAuth } from \"../context/Auth\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst privatePage = [\"Home\", \"About\", \"Courses\", \"Blog\", \"Contact\"];\r\nconst publicPage = [\"Home\", \"About\", \"Courses\", \"Blog\", \"Contact\", \"Login\"];\r\nconst settings = [\"Profile\", \"Logout\"];\r\n\r\nconst Header = () => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n  const [auth, setAuth] = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setAuth({\r\n      ...auth,\r\n      user: null,\r\n      token: \"\",\r\n    });\r\n    localStorage.removeItem(\"auth\");\r\n    toast.success(\"Logout Successfully\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  // Modal\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  const style_Logout = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: 200,\r\n    bgcolor: \"background.paper\",\r\n    boxShadow: 24,\r\n    p: 2,\r\n  };\r\n\r\n  const sweetPop = ()=>{\r\n    swal(\"Are you sure?\", {\r\n      dangerMode: true,\r\n      buttons: {\r\n        cancel: {\r\n            text: \"Cancel\",\r\n            value: false,\r\n            visible: true,\r\n        },\r\n        confirm: {\r\n            text: \"Confirm\",\r\n            value: true,\r\n            visible: true,\r\n        }\r\n    } \r\n    },)\r\n    .then((value)=>{\r\n      if(value){\r\n        handleLogout()\r\n      }\r\n    })\r\n  }\r\n\r\n  const imgUrl = \"https://restapinodejs.onrender.com\";\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"sticky\" color=\"grey\">\r\n        <Container maxWidth=\"xl\">\r\n          <Toolbar disableGutters>\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"a\"\r\n              href=\"#app-bar-with-responsive-menu\"\r\n              sx={{\r\n                mr: 2,\r\n                display: { xs: \"none\", md: \"flex\" },\r\n                flexGrow: 1,\r\n                fontFamily: \"monospace\",\r\n                fontWeight: 700,\r\n                letterSpacing: \".3rem\",\r\n                color: \"#D32F2F\",\r\n                textDecoration: \"none\",\r\n              }}\r\n            >\r\n              PhoenixTech\r\n            </Typography>\r\n\r\n            <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleOpenNavMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElNav}\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"left\",\r\n                }}\r\n                open={Boolean(anchorElNav)}\r\n                onClose={handleCloseNavMenu}\r\n                sx={{\r\n                  display: { xs: \"block\", md: \"none\" },\r\n                }}\r\n              >\r\n                {!auth.user\r\n                  ? publicPage.map((page) => {\r\n                      return (\r\n                        <>\r\n                          <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                            <Typography\r\n                              textAlign=\"center\"\r\n                              onClick={\r\n                                page == \"Home\"\r\n                                  ? () => navigate(`/`)\r\n                                  : () => navigate(`/${page}`)\r\n                              }\r\n                            >\r\n                              {page}\r\n                            </Typography>\r\n                          </MenuItem>\r\n                        </>\r\n                      );\r\n                    })\r\n                  : privatePage.map((page) => {\r\n                      return (\r\n                        <>\r\n                          <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                            <Typography\r\n                              textAlign=\"center\"\r\n                              onClick={\r\n                                page == \"Home\"\r\n                                  ? () => navigate(`/`)\r\n                                  : () => navigate(`/${page}`)\r\n                              }\r\n                            >\r\n                              {page}\r\n                            </Typography>\r\n                          </MenuItem>\r\n                        </>\r\n                      );\r\n                    })}\r\n              </Menu>\r\n            </Box>\r\n            <Typography\r\n              variant=\"h5\"\r\n              noWrap\r\n              component=\"a\"\r\n              href=\"#app-bar-with-responsive-menu\"\r\n              sx={{\r\n                mr: 2,\r\n                display: { xs: \"flex\", md: \"none\" },\r\n                flexGrow: 1,\r\n                fontFamily: \"monospace\",\r\n                fontWeight: 700,\r\n                letterSpacing: \".3rem\",\r\n                color: \"#D32F2F\",\r\n                textDecoration: \"none\",\r\n              }}\r\n            >\r\n              PhoenixTech\r\n            </Typography>\r\n            <Box sx={{ display: { xs: \"none\", md: \"flex\" },  }}>\r\n              {!auth.user\r\n                ? publicPage.map((page) => (\r\n                    <Button\r\n                      key={page}\r\n                      onClick={handleCloseNavMenu}\r\n                      sx={{ my: 2, color: \"black\", display: \"block\", mr: 2, fontWeight: \"bold\", fontStyle: \"italic\", \"&:hover\": { color: \"red\" } }}\r\n                      component={Link}\r\n                      to={page == \"Home\" ? `/` : `/${page}`}\r\n                    >\r\n                      {page}\r\n                    </Button>\r\n                  ))\r\n                : privatePage.map((page) => (\r\n                    <Button\r\n                      key={page}\r\n                      onClick={handleCloseNavMenu}\r\n                      sx={{ my: 2, color: \"black\", display: \"block\", mr: 2, fontWeight: \"bold\", fontStyle: \"italic\", \"&:hover\": { color: \"red\" } }}\r\n                      component={Link}\r\n                      to={page == \"Home\" ? `/` : `/${page}`}\r\n                    >\r\n                      {page}\r\n                    </Button>\r\n                  ))}\r\n            </Box>\r\n\r\n            {!auth.user ? null : (\r\n              <Box sx={{ flexGrow: 0 }}>\r\n                <Tooltip title=\"Open settings\">\r\n                  <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                    <Avatar\r\n                      alt={auth.user.name.toUpperCase()}\r\n                      src={``}\r\n                      sx={{\r\n                        border: \"3px solid white\",\r\n                        boxShadow: \"0px 0px 30px rgba(0,0,0,0.5)\",\r\n                        backgroundColor: \"#0D80D8\"\r\n                      }}\r\n                    />\r\n                  </IconButton>\r\n                </Tooltip>\r\n                <Menu\r\n                  sx={{ mt: \"45px\" }}\r\n                  id=\"menu-appbar\"\r\n                  anchorEl={anchorElUser}\r\n                  anchorOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  keepMounted\r\n                  transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  open={Boolean(anchorElUser)}\r\n                  onClose={handleCloseUserMenu}\r\n                >\r\n                  {settings.map((setting) => (\r\n                    <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                      <Typography\r\n                        textAlign=\"center\"\r\n                        onClick={\r\n                          setting == \"Logout\"\r\n                            ? sweetPop\r\n                            : () => navigate(`/${setting}`)\r\n                        }\r\n                      >\r\n                        {setting}\r\n                      </Typography>\r\n                      {/* <Modal\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"modal-modal-title\"\r\n                        aria-describedby=\"modal-modal-description\"\r\n                      >\r\n                        <Box sx={style_Logout}>\r\n                        <img\r\n                                src={\"/assets/logout.png\"}\r\n                                alt=\"\"\r\n                                height={150}\r\n                                style={{\r\n                                  textAlign: \"center\",\r\n                                  margin: \"auto\",\r\n                                  display: \"block\",\r\n                                  justifyContent: \"center\",\r\n                                  alignItems: \"center\",\r\n                                }}\r\n                              />\r\n                          <Typography\r\n                            id=\"modal-modal-title\"\r\n                            variant=\"h6\"\r\n                            component=\"h2\"\r\n                            textAlign={\"center\"}\r\n                          >\r\n                            Wanna go away?\r\n                          </Typography>\r\n                          <Link\r\n                            color=\"error\"\r\n                            onClick={handleLogout}\r\n                            style={{\r\n                              marginLeft: \"35%\",\r\n                              textDecoration: \"none\",\r\n                              color: \"red\",\r\n                            }}\r\n                          >\r\n                            Logout\r\n                          </Link>\r\n                        </Box>\r\n                      </Modal> */}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Menu>\r\n              </Box>\r\n            )}\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}